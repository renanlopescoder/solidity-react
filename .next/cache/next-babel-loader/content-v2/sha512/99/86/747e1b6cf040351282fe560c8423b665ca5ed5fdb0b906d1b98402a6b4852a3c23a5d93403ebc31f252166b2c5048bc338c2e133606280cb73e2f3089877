{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/renanlopes/Documents/workspace/witcher/solidity-react/src/components/SwapForm/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { SwapOutlined, ShrinkOutlined } from \"@ant-design/icons\";\nimport { buyTokens, sellTokens } from \"../../services/blockchain-service\";\n\nfunction SwapForm({\n  account,\n  ethBalance,\n  tokenBalance\n}) {\n  const {\n    0: tokenAmount,\n    1: setTokenAmount\n  } = useState(0);\n  const {\n    0: ethAmount,\n    1: setEthAmount\n  } = useState(0);\n  const {\n    0: isBuyToken,\n    1: setIsBuyToken\n  } = useState(true);\n\n  const onFinish = values => {\n    if (isBuyToken) {\n      // values.eth is the amount to buy\n      buyTokens(account, values.ether);\n    } else {\n      sellTokens(account, values.token);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, _objectSpread(_objectSpread({}, layout), {}, {\n    name: \"swap\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"ETH\",\n      name: \"ether\",\n      rules: [{\n        required: isBuyToken,\n        message: \"Please input value\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: isBuyToken ? ethBalance.balance : ethAmount,\n        onChange: event => setTokenAmount(event.target.value * 100),\n        autoComplete: \"off\",\n        disabled: !isBuyToken,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Melody Coin\",\n      name: \"token\",\n      rules: [{\n        required: !isBuyToken,\n        message: \"Please input value\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        disabled: isBuyToken,\n        placeholder: isBuyToken ? tokenAmount : tokenBalance.balance,\n        onChange: event => setEthAmount(event.target.value / 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, _objectSpread(_objectSpread({}, tailLayout), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          marginRight: \"20px\"\n        },\n        children: [\"Swap \", /*#__PURE__*/_jsxDEV(SwapOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setIsBuyToken(!isBuyToken),\n        children: [isBuyToken ? \"ETH x MLD\" : \"MLD x ETH\", \" \", /*#__PURE__*/_jsxDEV(ShrinkOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nexport default SwapForm;","map":{"version":3,"sources":["/Users/renanlopes/Documents/workspace/witcher/solidity-react/src/components/SwapForm/index.jsx"],"names":["React","useState","Form","Input","Button","SwapOutlined","ShrinkOutlined","buyTokens","sellTokens","SwapForm","account","ethBalance","tokenBalance","tokenAmount","setTokenAmount","ethAmount","setEthAmount","isBuyToken","setIsBuyToken","onFinish","values","ether","token","onFinishFailed","errorInfo","console","log","layout","remember","required","message","balance","event","target","value","tailLayout","marginRight","labelCol","span","wrapperCol","offset"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { SwapOutlined, ShrinkOutlined } from \"@ant-design/icons\";\n\nimport { buyTokens, sellTokens } from \"../../services/blockchain-service\";\n\nfunction SwapForm({ account, ethBalance, tokenBalance }) {\n  const [tokenAmount, setTokenAmount] = useState(0);\n  const [ethAmount, setEthAmount] = useState(0);\n  const [isBuyToken, setIsBuyToken] = useState(true);\n\n  const onFinish = (values) => {\n    if (isBuyToken) {\n      // values.eth is the amount to buy\n      buyTokens(account, values.ether);\n    } else {\n      sellTokens(account, values.token);\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"swap\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"ETH\"\n        name=\"ether\"\n        rules={[\n          {\n            required: isBuyToken,\n            message: \"Please input value\",\n          },\n        ]}\n      >\n        <Input\n          placeholder={isBuyToken ? ethBalance.balance : ethAmount}\n          onChange={(event) => setTokenAmount(event.target.value * 100)}\n          autoComplete=\"off\"\n          disabled={!isBuyToken}\n          type=\"number\"\n        />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Melody Coin\"\n        name=\"token\"\n        rules={[\n          {\n            required: !isBuyToken,\n            message: \"Please input value\",\n          },\n        ]}\n      >\n        <Input\n          type=\"number\"\n          disabled={isBuyToken}\n          placeholder={isBuyToken ? tokenAmount : tokenBalance.balance}\n          onChange={(event) => setEthAmount(event.target.value / 100)}\n        />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          style={{ marginRight: \"20px\" }}\n        >\n          Swap <SwapOutlined />\n        </Button>\n        <Button type=\"primary\" onClick={() => setIsBuyToken(!isBuyToken)}>\n          {isBuyToken ? \"ETH x MLD\" : \"MLD x ETH\"} <ShrinkOutlined />\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nexport default SwapForm;\n"]},"metadata":{},"sourceType":"module"}